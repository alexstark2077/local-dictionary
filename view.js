"use strict";class Visuals{clickedElement;emptyDictHTMLMsg='<div class="results__empty">Nothing to show...</div>';twoColumnsHTML='<div class="results__two-columns">\n                <div class="results__all">\n                    <form action="#" class="results__all-search">\n                        <div class="results__search-field-box">\n                            <input type="text" class="results__search-field" placeholder="search field">\n                        </div>\n                    </form>\n                    <div class="results__all-miniatures"></div>\n                </div>\n                <div class="results__one"></div>\n                <button class="results__see-all">See All</button>\n            </div>';handleFormSubmit(){formAddNew.addEventListener("submit",(function(e){e.preventDefault()}))}handleAddBtnClick(e){formAddNewBtn.addEventListener("click",e)}handleTabSwitch(e){controlBtnsContainer.addEventListener("click",(function(t){t.target.classList.contains("controls__btn")&&e(t)}))}getEntryHTML(e){return`\n        <div class="results__entry" data-id="${e.id}">\n        <div class="results__entry-wrapper">\n        <button class="results__entry-edit-btn"><img src="edit.png" alt="edit"></button>\n            <div class="results__entry-column">\n                <div class="results__entry-row" data-field="example">\n                    <div class="results__entry-name">example of usage:</div>\n                    <div class="results__entry-value">${e.example}</div>\n                </div>\n                <div class="results__entry-row" data-field="meaning">\n                    <div class="results__entry-name">meaning:</div>\n                    <div class="results__entry-value">${e.meaning}</div>\n                </div>\n                </div>\n                <div class="results__entry-column">\n                    <div class="results__entry-row" data-field="synonyms">\n                        <div class="results__entry-name">synonyms:</div>\n                        <div class="results__entry-value">${e.synonyms}</div>\n                    </div>\n                    \n                    <div class="results__entry-row-box">\n                        <div class="results__entry-row">\n                            <div class="results__entry-tags">\n                                <button data-tag="${e.tags.includes(" ")?e.tags.split(" ")[0]:e.tags}"\n                                    class="results__entry-value tag tag--${e.tags.includes(" ")?e.tags.split(" ")[0]:e.tags}">${e.tags}</button>\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </div>`}handleExportBtnClick(e){exportBtn.addEventListener("click",e)}renderDictContents(e){if(results.innerHTML="",0===e.length)return document.querySelectorAll(".results__empty").forEach((e=>e.remove())),void results.insertAdjacentHTML("beforeend",this.emptyDictHTMLMsg);e.reverse().forEach(((e,t)=>{const s=this.getEntryHTML(e);results.insertAdjacentHTML("beforeend",s)})),entriesCount.textContent=Logic.getDict().length}clearFields(){formAddNewInputs.forEach((e=>{e.value="",e.blur()})),formAddNewRadios.forEach((e=>e.checked=!1)),firstControlBtn.textContent="Add New",formAddNewBtn.textContent="Add",formAddNewBtn.blur()}renderMsg(e,t){const s=`<div class="message ${"error"===t?"error":"success"}">${e}</div>`;formAddNew.insertAdjacentHTML("beforeend",s),setTimeout((()=>{document.querySelector(".message").remove()}),3e3)}toggleSecondTabVisibility(){controlsBox.classList.toggle("visible"),changeViewBlock.classList.toggle("visible-flex"),results.classList.toggle("active")}readTags(){const e=Array.from(formAddNewRadios).find((e=>e.checked)).value;return e.includes("-")?e.split("-").join(" "):e}emphasizeWord(e,t){const{example:s,word:n}=e;document.querySelectorAll(".results__entry").forEach((e=>{const t=e.querySelector(".results__entry-value").innerHTML.replace(n,`<span class="word-emphasized">${n}</span>`);e.querySelector(".results__entry-value").innerHTML=t}))}handleChangeViewBtnClick(e){const t=this;changeViewBlock.addEventListener("click",(function(s){if(!s.target.closest(".change-view__btn"))return;const n=s.target.closest(".change-view__btn").dataset.view;document.querySelectorAll(".change-view__btn").forEach((e=>e.classList.remove("active"))),s.target.closest(".change-view__btn").classList.add("active"),"rows"===n&&(t.toggleView("rows"),e(n)),"grid"===n&&(t.toggleView("grid"),e(n)),"two-columns"===n&&(t.toggleView("two-columns"),e(n))}))}toggleView(e){"rows"!==e&&"grid"!==e||(document.querySelector(".results__two-columns")?.classList.add("hidden"),document.querySelectorAll(".results__entry").forEach((e=>e.classList.remove("hidden")))),"rows"===e&&(results.classList.remove("results--grid"),results.dataset.view="rows"),"grid"===e&&(results.classList.add("results--grid"),results.dataset.view="grid"),"two-columns"===e&&(results.classList.remove("results--grid"),document.querySelectorAll(".results__entry").forEach((e=>e.classList.add("hidden"))),document.querySelector(".results__two-columns")?.remove(),results.insertAdjacentHTML("beforeend",this.twoColumnsHTML),results.dataset.view="two-columns")}handleChangeColorsBtnClick(){const e=this;document.querySelector(".change-colors__title").addEventListener("click",(function(){document.querySelector(".change-colors__options").classList.toggle("shown"),e.handleColorChange()}))}handleColorChange(){document.querySelector(".change-colors__options").addEventListener("click",(e=>{if(!e.target.classList.contains("change-colors__option"))return;const t=e.target.dataset.color;"green"===t&&document.documentElement.style.setProperty("--main","lime"),"coldblue"===t&&document.documentElement.style.setProperty("--main","#a6fafa"),"white"===t&&document.documentElement.style.setProperty("--main","white"),"bloody"===t&&document.documentElement.style.setProperty("--main","rgba(255,0,0,0.5)"),document.querySelector(".change-colors__options").classList.remove("shown")})),document.addEventListener("click",(function(e){e.target.closest(".change-colors__options")||e.target.closest(".change-colors__title")||e.target.closest(".change-colors__option")||document.querySelector(".change-colors__options").classList.remove("shown")}))}handleEditBtnClick(e){results.addEventListener("click",(function(t){if(!t.target.closest(".results__entry-edit-btn"))return;const s=t.target.closest(".results__entry-edit-btn").closest(".results__entry");e(s)}))}editMode(e){controlsBox.classList.remove("visible"),changeViewBlock.classList.remove("visible-flex"),formAddNew.style.display="flex",results.classList.remove("active"),document.querySelector(".controls__btn").textContent="Editing",document.querySelector(".controls__btn").click();const{example:t,meaning:s,synonyms:n,tags:r,word:l}=e;formAddNewExample.value=t,formAddNewMeaning.value=s,formAddNewSynonyms.value=n,formAddNewWord.value=l;const o=r.split(" ").join("-");Array.from(document.querySelectorAll(".form__input-tag-check-old")).find((e=>e.classList.contains(`checkbox-${o}`))).checked=!0,formAddNewExample.focus(),formAddNewBtn.textContent="Edit"}handleTagBtnClick(e){results.addEventListener("click",(function(t){const s=t.target;s.classList.contains("tag")&&e(s.dataset.tag)}))}handleSeeAllBtnClick(e){seeAllBtn.addEventListener("click",(function(){e()}))}handleMiniatureClick(e){const t=this;results.addEventListener("click",(function(s){const n=s.target;n.classList.contains("results__entry-miniature")&&(t.clickedElement=n.textContent,document.querySelectorAll(".results__entry-miniature").forEach((e=>e.classList.remove("active"))),n.classList.add("active"),e(n.textContent))}))}handleMiniatureInput(e){document.querySelector(".results__search-field")?.addEventListener("input",(function(t){e(this.value)}))}handleResultsSeeAllClick(e){document.querySelector(".results__see-all").addEventListener("click",(function(t){this.style.display="none",e()}))}setUpView(e,t){if(results.dataset.view=e,document.querySelectorAll(".change-view__btn").forEach((e=>e.classList.remove("active"))),Array.from(document.querySelectorAll(".change-view__btn")).find((t=>t.dataset.view===e)).classList.add("active"),"rows"!==e)if("grid"!==e){if("two-columns"===e){this.toggleView("two-columns");const e=t.map((e=>e.word));return document.querySelector(".results__one").innerHTML=this.getEntryHTML(t[0]),this.emphasizeWord(t[0]),e.forEach((e=>{const t=`<div class="results__entry-miniature">${e}</div>`;document.querySelector(".results__all-miniatures").insertAdjacentHTML("beforeend",t)})),document.querySelector(".results__entry-miniature").classList.add("active"),void this.handleMiniatureInput(reactToMiniatureInput)}}else this.toggleView("grid");else this.toggleView("rows")}selectActiveMiniature(e=""){"clearInput"===e&&(this.clickedElement=document.querySelector(".results__one .word-emphasized").textContent),Array.from(document.querySelectorAll(".results__entry-miniature")).find((e=>e.textContent===this.clickedElement)).classList.add("active")}}